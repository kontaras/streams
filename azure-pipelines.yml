# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
    - '*'

pool:
  vmImage: 'windows-2019'
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python34:
      python.version: '3.4'
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'
    #Docs say that 3.8 is supported, it is not
    #Python38:
    #  python.version: '3.8'
    PyPy2:
      python.version: 'PyPy2'
    PyPy3:
      python.version: 'PyPy3'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install codecov
    pip install pycodestyle
  displayName: 'Install dependencies'

- script: |
    pip install pytest
    pytest
    python setup.py test build_sphinx sdist bdist
    pycodestyle streams test
  displayName: 'pytest'
- script: |
    codecov -t $(CODECOV_TOKEN)
  displayName: 'codecov upload'
